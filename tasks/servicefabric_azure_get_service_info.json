{
	"description": "Returns the information about the specified service belonging to the specified Service Fabric application.",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"isservicegroup":{
			   "description": "Whether the service is in a service group.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"id":{
			   "description": "The identity of the service. This ID is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.Starting in version 6.0, hierarchical names are delimited with the '~' character. For example, if the service name is 'fabric:/myapp/app1/svc1',the service identity would be 'myapp~app1~svc1' in 6.0+ and 'myapp/app1/svc1' in previous versions.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"servicekind":{
			   "description": "The kind of service (Stateless or Stateful).",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"manifestversion":{
			   "description": "The version of the service manifest.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"servicestatus":{
			   "description": "The status of the application.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"api_version":{
			   "description": "The version of the API. This parameter is required and its value must be '6.0'.Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"timeout":{
			   "description": "The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"name":{
			   "description": "The full name of the service with 'fabric:' URI scheme.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"typename":{
			   "description": "Name of the service type as specified in the service manifest.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"healthstate":{
			   "description": "The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"application_id":{
			   "description": "The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.Starting from version 6.0, hierarchical names are delimited with the '~' character.For example, if the application name is 'fabric:/myapp/app1', the application identity would be 'myapp~app1' in 6.0+ and 'myapp/app1' in previous versions.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"service_id":{
			   "description": "The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme.Starting from version 6.0, hierarchical names are delimited with the '~' character.For example, if the service name is 'fabric:/myapp/app1/svc1', the service identity would be 'myapp~app1~svc1' in 6.0+ and 'myapp/app1/svc1' in previous versions.",
			   "type": "Optional[String[1]]"
			}
			
	}
}