{
	"description": "Suggests documents in the Azure Search index that match the given partial query text.",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"top":{
			   "description": "The number of suggestions to retrieve. The value must be a number between 1 and 100. The default is 5.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"search":{
			   "description": "The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"highlight_pre_tag":{
			   "description": "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"select":{
			   "description": "The list of fields to retrieve. If unspecified, only the key field will be included in the results.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"api_version":{
			   "description": "Client Api Version.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"client_request_id":{
			   "description": "The tracking ID sent with the request to help with debugging.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"searchcoverage":{
			   "description": "A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"suggester_name":{
			   "description": "The name of the suggester as specified in the suggesters collection that's part of the index definition.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"fuzzy":{
			   "description": "A value indicating whether to use fuzzy matching for the suggestions query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestions queries are slower and consume more resources.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"orderby":{
			   "description": "The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"search_fields":{
			   "description": "The list of field names to search for the specified search text. Target fields must be included in the specified suggester.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"filter":{
			   "description": "An OData expression that filters the documents considered for suggestions.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"highlight_post_tag":{
			   "description": "A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"minimum_coverage":{
			   "description": "A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestions query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"value":{
			   "description": "The sequence of results returned by the query.",
			   "type": "Optional[String[1]]"
			}
			
	}
}